# -*- coding: utf-8 -*-

import math
from aiogram import types, Dispatcher
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.state import State, StatesGroup
from aiogram.utils.callback_data import CallbackData

from bot.database.manager import db

# --- ๐ก ุงููุงููุณ ุงูุฐูู ูุชุฑุฌูุฉ ุงูุฃุณูุงุก ุงูุจุฑูุฌูุฉ (ุงููุณุฎุฉ ุงููุงููุฉ) ๐ก ---
TEXT_ID_DESCRIPTIONS = {
    # --- ุงููุงุฌูุฉ ุงูุนุงูุฉ ูุงูุจุฏุก ---
    "admin_panel_title": "ุนููุงู ููุญุฉ ุงูุชุญูู ุงูุฑุฆูุณูุฉ",
    "welcome_message": "ุฑุณุงูุฉ ุงูุชุฑุญูุจ (/start)",
    "date_button": "ูุต ุฒุฑ 'ุงูุชุงุฑูุฎ' ุงูุฑุฆูุณู",
    "time_button": "ูุต ุฒุฑ 'ุงูุณุงุนุฉ' ุงูุฑุฆูุณู",
    "reminder_button": "ูุต ุฒุฑ 'ุงูุฃุฐูุงุฑ' ุงูุฑุฆูุณู",
    "ar_back_button": "ุฒุฑ 'ุนูุฏุฉ' ุงูุนุงู",
    "ar_page_info": "ูุต ูุนูููุงุช ุงูุตูุญุฉ (ูุซุงู: ุตูุญุฉ 1/5)",
    "ar_next_button": "ุฒุฑ 'ุงูุชุงูู'",
    "ar_prev_button": "ุฒุฑ 'ุงูุณุงุจู'",
    "ar_delete_button": "ุฒุฑ 'ุญุฐู' ุงูุนุงู",
    "user_message_received": "ุฑุณุงูุฉ ุชุฃููุฏ ุงุณุชูุงู ุฑุณุงูุฉ ุงููุณุชุฎุฏู",

    # --- ุงูุฑุฏูุฏ ุงูุชููุงุฆูุฉ ---
    "ar_menu_title": "ุนููุงู ูุงุฆูุฉ 'ุงูุฑุฏูุฏ ุงูุชููุงุฆูุฉ'",
    "ar_add_button": "ุฒุฑ 'ุฅุถุงูุฉ ุฑุฏ ุฌุฏูุฏ'",
    "ar_view_button": "ุฒุฑ 'ุนุฑุถ ูู ุงูุฑุฏูุฏ'",
    "ar_import_button": "ุฒุฑ 'ุงุณุชูุฑุงุฏ ูู ููู' (ููุฑุฏูุฏ)",
    "ar_ask_for_keyword": "ุฑุณุงูุฉ ุทูุจ ุงููููุฉ ุงูููุชุงุญูุฉ",
    "ar_ask_for_content": "ุฑุณุงูุฉ ุทูุจ ูุญุชูู ุงูุฑุฏ",
    "ar_added_success": "ุฑุณุงูุฉ ูุฌุงุญ ุฅุถุงูุฉ ุงูุฑุฏ",
    "ar_add_another_button": "ุฒุฑ 'ุฅุถุงูุฉ ุฑุฏ ุขุฎุฑ'",
    "ar_ask_for_file": "ุฑุณุงูุฉ ุทูุจ ููู ุงูุงุณุชูุฑุงุฏ (ููุฑุฏูุฏ)",
    "ar_import_success": "ุฑุณุงูุฉ ูุฌุงุญ ุงูุงุณุชูุฑุงุฏ (ููุฑุฏูุฏ)",
    "ar_no_replies": "ุฑุณุงูุฉ 'ูุง ุชูุฌุฏ ุฑุฏูุฏ'",
    "ar_deleted_success": "ุฑุณุงูุฉ ูุฌุงุญ ุงูุญุฐู (ููุฑุฏูุฏ)",
    
    # --- ุงูุชุฐููุฑุงุช ---
    "rem_menu_title": "ุนููุงู ูุงุฆูุฉ 'ุงูุชุฐููุฑุงุช'",
    "rem_add_button": "ุฒุฑ 'ุฅุถุงูุฉ ุชุฐููุฑ'",
    "rem_view_button": "ุฒุฑ 'ุนุฑุถ ุงูุชุฐููุฑุงุช'",
    "rem_import_button": "ุฒุฑ 'ุงุณุชูุฑุงุฏ ุชุฐููุฑุงุช'",
    "rem_ask_for_content": "ุฑุณุงูุฉ ุทูุจ ูุต ุงูุชุฐููุฑ",
    "rem_added_success": "ุฑุณุงูุฉ ูุฌุงุญ ุฅุถุงูุฉ ุงูุชุฐููุฑ",
    "rem_add_another_button": "ุฒุฑ 'ุฅุถุงูุฉ ุชุฐููุฑ ุขุฎุฑ'",
    "rem_ask_for_file": "ุฑุณุงูุฉ ุทูุจ ููู ุงูุงุณุชูุฑุงุฏ (ููุชุฐููุฑุงุช)",
    "rem_import_success": "ุฑุณุงูุฉ ูุฌุงุญ ุงูุงุณุชูุฑุงุฏ (ููุชุฐููุฑุงุช)",
    "rem_no_reminders": "ุฑุณุงูุฉ 'ูุง ุชูุฌุฏ ุชุฐููุฑุงุช'",
    "rem_deleted_success": "ุฑุณุงูุฉ ูุฌุงุญ ุงูุญุฐู (ููุชุฐููุฑุงุช)",
    "rem_delete_button": "ุฒุฑ 'ุญุฐู' (ููุชุฐููุฑุงุช)",

    # --- ููุดูุฑุงุช ุงูููุงุฉ ---
    "cp_menu_title": "ุนููุงู ูุงุฆูุฉ 'ููุดูุฑุงุช ุงูููุงุฉ'",
    "cp_set_auto_msg_button": "ุฒุฑ 'ุชุนููู ุฑุณุงูุฉ ุงููุดุฑ'",
    "cp_view_auto_msg_button": "ุฒุฑ 'ุนุฑุถ ุฑุณุงูุฉ ุงููุดุฑ'",
    "cp_publish_now_button": "ุฒุฑ 'ูุดุฑ ุงูุขู'",
    "cp_schedule_button": "ุฒุฑ 'ุฌุฏููุฉ ููุดูุฑ'",
    "cp_view_scheduled_button": "ุฒุฑ 'ุนุฑุถ ุงููุฌุฏููุฉ'",
    "cp_ask_for_auto_msg": "ุฑุณุงูุฉ ุทูุจ ูุญุชูู ุงููุดุฑ ุงูุชููุงุฆู",
    "cp_auto_msg_set_success": "ุฑุณุงูุฉ ูุฌุงุญ ุชุนููู ุงููุดุฑ ุงูุชููุงุฆู",
    "cp_no_auto_msg": "ุฑุณุงูุฉ 'ูุง ููุฌุฏ ููุดูุฑ ุชููุงุฆู'",
    "cp_auto_msg_deleted_success": "ุฑุณุงูุฉ ูุฌุงุญ ุญุฐู ุงูููุดูุฑ ุงูุชููุงุฆู",
    "cp_publish_started": "ุฑุณุงูุฉ 'ุจุฏุก ุงููุดุฑ ุงูุขู'",
    "cp_publish_finished": "ุฑุณุงูุฉ 'ุงูุชูุงู ุงููุดุฑ ุงูุขู'",
    "cp_error_no_auto_msg_to_publish": "ุฎุทุฃ: ูุง ููุฌุฏ ููุดูุฑ ููุดุฑู",
    "cp_error_no_channels_to_publish": "ุฎุทุฃ: ูุง ุชูุฌุฏ ูููุงุช ูููุดุฑ",

    # --- ุฅุฏุงุฑุฉ ุงููููุงุช ---
    "cm_menu_title": "ุนููุงู ูุงุฆูุฉ 'ุฅุฏุงุฑุฉ ุงููููุงุช'",
    "cm_add_button": "ุฒุฑ 'ุฅุถุงูุฉ ููุงุฉ'",
    "cm_view_button": "ุฒุฑ 'ุนุฑุถ ุงููููุงุช'",
    "cm_ask_for_channel_id": "ุฑุณุงูุฉ ุทูุจ ูุนุฑูู ุงูููุงุฉ",
    "cm_add_success": "ุฑุณุงูุฉ ูุฌุงุญ ุฅุถุงูุฉ ุงูููุงุฉ",
    "cm_add_fail_not_admin": "ุฎุทุฃ: ุงูุจูุช ููุณ ูุดุฑูุงู",
    "cm_add_fail_invalid_id": "ุฎุทุฃ: ูุนุฑูู ุงูููุงุฉ ุบูุฑ ุตุงูุญ",
    "cm_add_fail_already_exists": "ุฎุทุฃ: ุงูููุงุฉ ูุถุงูุฉ ุจุงููุนู",
    "cm_no_channels": "ุฑุณุงูุฉ 'ูุง ุชูุฌุฏ ูููุงุช'",
    "cm_deleted_success": "ุฑุณุงูุฉ ูุฌุงุญ ุญุฐู ุงูููุงุฉ",
    "cm_test_button": "ุฒุฑ 'ุชุฌุฑุจุฉ ุงูุฅุฑุณุงู ููููุงุฉ'",
    "cm_test_success": "ุฑุณุงูุฉ ูุฌุงุญ ุชุฌุฑุจุฉ ุงูุฅุฑุณุงู",
    "cm_test_fail": "ุฑุณุงูุฉ ูุดู ุชุฌุฑุจุฉ ุงูุฅุฑุณุงู",

    # --- ุฅุฏุงุฑุฉ ุงูุญุธุฑ ---
    "bm_menu_title": "ุนููุงู ูุงุฆูุฉ 'ุฅุฏุงุฑุฉ ุงูุญุธุฑ'",
    "bm_ban_button": "ุฒุฑ 'ุญุธุฑ ูุณุชุฎุฏู'",
    "bm_unban_button": "ุฒุฑ 'ุฅูุบุงุก ุญุธุฑ'",
    "bm_view_button": "ุฒุฑ 'ุนุฑุถ ุงููุญุธูุฑูู'",
    "bm_ask_for_user_id": "ุฑุณุงูุฉ ุทูุจ ID ููุญุธุฑ",
    "bm_ask_for_unban_user_id": "ุฑุณุงูุฉ ุทูุจ ID ูุฅูุบุงุก ุงูุญุธุฑ",
    "bm_user_banned_success": "ุฑุณุงูุฉ ูุฌุงุญ ุญุธุฑ ุงููุณุชุฎุฏู",
    "bm_user_already_banned": "ุฎุทุฃ: ุงููุณุชุฎุฏู ูุญุธูุฑ ุจุงููุนู",
    "bm_user_unbanned_success": "ุฑุณุงูุฉ ูุฌุงุญ ุฅูุบุงุก ุงูุญุธุฑ",
    "bm_user_not_banned": "ุฎุทุฃ: ุงููุณุชุฎุฏู ููุณ ูุญุธูุฑุงู",
    "bm_invalid_user_id": "ุฎุทุฃ: ID ุงููุณุชุฎุฏู ุบูุฑ ุตุงูุญ",
    "bm_no_banned_users": "ุฑุณุงูุฉ 'ูุง ููุฌุฏ ูุญุธูุฑูู'",

    # --- ุงูุญูุงูุฉ ูุงูุฃูุงู ---
    "sec_menu_title": "ุนููุงู ูุงุฆูุฉ 'ุงูุญูุงูุฉ ูุงูุฃูุงู'",
    "sec_bot_status_button": "ุฒุฑ 'ุญุงูุฉ ุงูุจูุช'",
    "sec_media_filtering_button": "ุฒุฑ 'ููุน ุงููุณุงุฆุท'",
    "sec_antiflood_button": "ุฒุฑ 'ููุน ุงูุชูุฑุงุฑ'",
    "sec_rejection_message_button": "ุฒุฑ 'ุชุนุฏูู ุฑุณุงูุฉ ุงูุฑูุถ'",
    "sec_bot_active": "ูุต 'ูุนูู' (ุญุงูุฉ ุงูุจูุช)",
    "sec_bot_inactive": "ูุต 'ูุชููู' (ุญุงูุฉ ุงูุจูุช)",
    "security_rejection_message": "ุฑุณุงูุฉ ุฑูุถ ุงููุณุงุฆุท ุงูููููุนุฉ",

    # --- ุฌุฏููุฉ ุงูููุดูุฑุงุช ---
    "sch_ask_for_message": "ุฑุณุงูุฉ ุทูุจ ูุญุชูู ุงูููุดูุฑ ุงููุฌุฏูู",
    "sch_ask_for_channels": "ุฑุณุงูุฉ ุทูุจ ุงุฎุชูุงุฑ ูููุงุช ุงูุฌุฏููุฉ",
    "sch_all_channels_button": "ุฒุฑ 'ูู ุงููููุงุช' (ููุฌุฏููุฉ)",
    "sch_ask_for_datetime": "ุฑุณุงูุฉ ุทูุจ ุชุงุฑูุฎ ูููุช ุงูุฌุฏููุฉ",
    "sch_invalid_datetime": "ุฎุทุฃ: ุตูุบุฉ ุงูุชุงุฑูุฎ ุบูุฑ ุตุงูุญุฉ",
    "sch_datetime_in_past": "ุฎุทุฃ: ูุง ูููู ุงูุฌุฏููุฉ ูู ุงููุงุถู",
    "sch_add_success": "ุฑุณุงูุฉ ูุฌุงุญ ุฅุถุงูุฉ ุงูุฌุฏููุฉ",
    "sch_no_jobs": "ุฑุณุงูุฉ 'ูุง ุชูุฌุฏ ููุดูุฑุงุช ูุฌุฏููุฉ'",
    "sch_deleted_success": "ุฑุณุงูุฉ ูุฌุงุญ ุญุฐู ุงูุฌุฏููุฉ",

    # --- ููุน ุงูุชูุฑุงุฑ (ุจุฑูุชูููู ุณูุฑุจูุฑูุณ) ---
    "af_menu_title": "ุนููุงู ูุงุฆูุฉ 'ููุน ุงูุชูุฑุงุฑ'",
    "af_status_button": "ุฒุฑ 'ุญุงูุฉ ุงูุจุฑูุชูููู'",
    "af_enabled": "ูุต 'ููุนู' (ูููุน ุงูุชูุฑุงุฑ)",
    "af_disabled": "ูุต 'ูุนุทู' (ูููุน ุงูุชูุฑุงุฑ)",
    "af_edit_threshold_button": "ุฒุฑ 'ุชุนุฏูู ุนุชุจุฉ ุงูุฅุฒุนุงุฌ'",
    "af_edit_mute_duration_button": "ุฒุฑ 'ุชุนุฏูู ูุฏุฉ ุงูุชูููุฏ'",
    "af_ask_for_new_value": "ุฑุณุงูุฉ ุทูุจ ุฅุฏุฎุงู ูููุฉ ุฌุฏูุฏุฉ",
    "af_updated_success": "ุฑุณุงูุฉ ูุฌุงุญ ุชุญุฏูุซ ุงูุฅุนุฏุงุฏ",
    "af_mute_notification": "ุฑุณุงูุฉ ุฅุดุนุงุฑ ุงููุณุชุฎุฏู ุจุงูุชูููุฏ ุงููุคูุช",
    "af_ban_notification": "ุฑุณุงูุฉ ุฅุดุนุงุฑ ุงููุณุชุฎุฏู ุจุงูุญุธุฑ ุงูุฏุงุฆู",

    # --- ุงูุฅุญุตุงุฆูุงุช ---
    "stats_title": "ุนููุงู ูุงุฆูุฉ 'ุงูุฅุญุตุงุฆูุงุช'",
    "stats_total_users": "ูุต 'ุฅุฌูุงูู ุงููุณุชุฎุฏููู'",
    "stats_banned_users": "ูุต 'ุงููุณุชุฎุฏููู ุงููุญุธูุฑูู'",
    "stats_auto_replies": "ูุต 'ุงูุฑุฏูุฏ ุงูุชููุงุฆูุฉ'",
    "stats_reminders": "ูุต 'ุงูุชุฐููุฑุงุช'",
    "stats_refresh_button": "ุฒุฑ 'ุชุญุฏูุซ' (ููุฅุญุตุงุฆูุงุช)",
    
    # --- ุงูุนูุงููู ุงููุชุจููุฉ ---
    "te_menu_title": "ุนููุงู ูุงุฆูุฉ 'ูุญุฑุฑ ุงููุตูุต'",
}


class EditSingleText(StatesGroup):
    waiting_for_new_text = State()

te_pagination_cb = CallbackData("te_page", "page")
te_edit_cb = CallbackData("te_edit", "id")

async def show_texts_menu(call: types.CallbackQuery, state: FSMContext, callback_data: dict = None):
    """ูุนุฑุถ ูุงุฆูุฉ ุจุงููุตูุต ุงููุงุจูุฉ ููุชุนุฏูู ูุน ุฃูุตุงู ุนุฑุจูุฉ."""
    await state.finish()
    page = int(callback_data.get("page", 1)) if callback_data else 1
    
    TEXTS_PER_PAGE = 15 # ุชู ุฒูุงุฏุฉ ุงูุนุฏุฏ ูุนุฑุถ ุงููุฒูุฏ ูู ุงูุฎูุงุฑุงุช ูู ุงูุตูุญุฉ ุงููุงุญุฏุฉ
    all_texts_ids = await db.get_all_editable_texts()
    
    if not all_texts_ids:
        await call.answer("ูุง ุชูุฌุฏ ูุตูุต ูุนุฑุถูุง.", show_alert=True)
        return

    total_pages = math.ceil(len(all_texts_ids) / TEXTS_PER_PAGE)
    start_index = (page - 1) * TEXTS_PER_PAGE
    end_index = start_index + TEXTS_PER_PAGE
    texts_to_show = all_texts_ids[start_index:end_index]
    
    page_info = (await db.get_text("ar_page_info")).format(current_page=page, total_pages=total_pages)
    
    keyboard = types.InlineKeyboardMarkup(row_width=1)
    for text_id in texts_to_show:
        # ุฅุฐุง ูู ูุฌุฏ ุชุฑุฌูุฉุ ูุนุฑุถ ุงูุงุณู ุงูุจุฑูุฌู ููุง ูู
        display_name = TEXT_ID_DESCRIPTIONS.get(text_id, f"{text_id} (ูุง ููุฌุฏ ูุตู)")
        keyboard.add(types.InlineKeyboardButton(
            text=f"โ๏ธ {display_name}",
            callback_data=te_edit_cb.new(id=text_id)
        ))

    pagination_buttons = []
    if page > 1:
        pagination_buttons.append(types.InlineKeyboardButton(text=await db.get_text("ar_prev_button"), callback_data=te_pagination_cb.new(page=page - 1)))
    if page < total_pages:
        pagination_buttons.append(types.InlineKeyboardButton(text=await db.get_text("ar_next_button"), callback_data=te_pagination_cb.new(page=page + 1)))
    
    if pagination_buttons:
        keyboard.row(*pagination_buttons)
        
    keyboard.add(types.InlineKeyboardButton(text=await db.get_text("ar_back_button"), callback_data="admin:panel:back"))
    
    menu_title = await db.get_text('te_menu_title')
    await call.message.edit_text(f"{menu_title}\n\n({page_info})", reply_markup=keyboard, parse_mode="Markdown")
    await call.answer()

async def edit_text_start(call: types.CallbackQuery, state: FSMContext, callback_data: dict):
    """ูุจุฏุฃ ุนูููุฉ ุชุนุฏูู ูุต ูุนูู."""
    text_id = callback_data['id']
    await state.update_data(text_id_to_edit=text_id)
    
    current_text = await db.get_text(text_id)
    display_name = TEXT_ID_DESCRIPTIONS.get(text_id, text_id)
    
    prompt_text = (await db.get_text("te_ask_for_new_text"))
    prompt_text += f"\n\n*ุงููุต ุงููุณุชูุฏู:* {display_name}"
    prompt_text += f"\n*ุงููุต ุงูุญุงูู:*\n`{current_text}`"

    keyboard = types.InlineKeyboardMarkup().add(types.InlineKeyboardButton(text=await db.get_text("ar_back_button"), callback_data="admin:texts_editor"))
    await call.message.edit_text(prompt_text, reply_markup=keyboard, parse_mode="Markdown")
    await EditSingleText.waiting_for_new_text.set()
    await call.answer()

async def new_text_received(message: types.Message, state: FSMContext):
    """ูุณุชูู ุงููุต ุงูุฌุฏูุฏ ููุญูุธู."""
    data = await state.get_data()
    text_id = data['text_id_to_edit']
    
    await db.update_text(text_id, message.text)
    await state.finish()
    
    text = await db.get_text("te_updated_success")
    keyboard = types.InlineKeyboardMarkup().add(types.InlineKeyboardButton(text=await db.get_text("ar_back_button"), callback_data="admin:texts_editor"))
    await message.answer(text, reply_markup=keyboard)


def register_texts_editor_handlers(dp: Dispatcher):
    """ูุณุฌู ูู ูุนุงูุฌุงุช ูุญุฑุฑ ุงููุตูุต."""
    dp.register_callback_query_handler(show_texts_menu, text="admin:texts_editor", is_admin=True, state="*")
    dp.register_callback_query_handler(show_texts_menu, te_pagination_cb.filter(), is_admin=True, state="*")
    
    dp.register_callback_query_handler(edit_text_start, te_edit_cb.filter(), is_admin=True, state="*")
    dp.register_message_handler(new_text_received, state=EditSingleText.waiting_for_new_text, is_admin=True)
